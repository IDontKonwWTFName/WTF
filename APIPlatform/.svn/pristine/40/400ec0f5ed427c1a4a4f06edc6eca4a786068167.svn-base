package sepim.server;

import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Executors;
import java.util.logging.Logger;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.jboss.netty.bootstrap.ServerBootstrap;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory;

import com.platform.model.Relation;

import sepim.server.clients.Client;
import sepim.server.clients.World;
import sepim.server.net.ServerPipelineFactory;

public class Server {
	
	private final Logger logger = Logger.getLogger(this.getClass().getName());
	
	public Server() {
		NioServerSocketChannelFactory factory = new NioServerSocketChannelFactory(
				Executors.newCachedThreadPool(), Executors.newCachedThreadPool());
		ServerBootstrap bootstrap = new ServerBootstrap(factory);
		bootstrap.setPipelineFactory(new ServerPipelineFactory());
		bootstrap.bind(new InetSocketAddress("219.217.245.235", 8082));
		logger.info("Ready and Listening");
		initDataBase();
	}
	
	public static void main(String args[]) {
		new Server();
	}
	
	public void initDataBase(){
		SessionFactory sessionFactory = new Configuration().configure()
				.buildSessionFactory();
		Session session = sessionFactory.openSession();
		//从数据库读取出手环ID列表
		ArrayList<String> ringIdList = new ArrayList<String>();
		try {
			SQLQuery sqlQuery = session.createSQLQuery(
					"select shouhuan_id from dbo.[relation]");
			List ringIdList1 = sqlQuery.list();
			for(Object a : ringIdList1){
				if(!ringIdList.contains(a.toString())){
					ringIdList.add(a.toString());
				}
			}
			for(String shouhuan_id:ringIdList){
			SQLQuery sqlQuery1 = session.createSQLQuery(
					"select channel_id from dbo.[relation] r join dbo.[user_info] s on r.user_id=s.userid where r.shouhuan_id=:shouhuan_id");
			sqlQuery.setString("shouhuan_id", shouhuan_id);
			List channelIdList = sqlQuery.list();
			}
			//从数据库通过手环ID读取出辅助中心号码channelID和中心号码channelID列表
			
			//从数据库通过手环ID读取出中心号码channelID
      
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			session.close();
			sessionFactory.close();
		}
		
		
	}
	
}
